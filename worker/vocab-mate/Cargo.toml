[package]
name = "vocab-mate"
version = "0.1.0"
authors = ["alank <alankan976@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
cfg-if = "1.0"
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
serde = { version = "1.0", features = ["derive"] }

config = "0.11"
chrono = { version = "0.4", features = ["serde", "wasmbind"] }
graphql_client = "0.9.0"

surf = { version = "2.2.0", default-features = false, features = [
    "wasm-client",
    "middleware-logger",
    "encoding",
] }
web-sys = { version = "0.3.51", features = ["console"] }
anyhow = "1.0"
# future => promise
futures = "0.3"
async-trait = "0.1"
wasm-bindgen-futures = "0.4"
# https://docs.rs/getrandom/0.2.3/getrandom/#webassembly-support
getrandom = { version = "0.2", features = ["js"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
